package com.glsx.oms.bigdata.admin.bma.salesTask.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.glsx.oms.bigdata.admin.bma.framework.ImportExcelProperty;
import com.glsx.oms.bigdata.admin.bma.salesTask.model.SalesTask;
import com.glsx.oms.bigdata.admin.bma.salesTask.service.SalesService;
import com.glsx.oms.bigdata.admin.bma.system.bean.ImportedResult;
import com.glsx.oms.bigdata.admin.bma.util.ExcelUtils;
import com.glsx.oms.bigdata.admin.bma.vo.RespMessage;
import com.google.gson.Gson;

@RestController
@RequestMapping("/salesTask")
public class SalesTaskController {

	private final static Logger LOGGER = LoggerFactory.getLogger(SalesTaskController.class);

	/**
	 * 静态变量配置类
	 */
	@Autowired
	private ImportExcelProperty importExcelProperty;

	@Resource
	private SalesService salesService;

	@RequestMapping(value = "/importSalesTask", produces = { "application/json" }, method = RequestMethod.POST)
	public RespMessage importSalesTask(@RequestParam(value = "file") MultipartFile files,
			@RequestParam(value = "importExcel") String importExcel, HttpServletRequest httpServletRequest,
			HttpServletResponse response) {
		RespMessage rm = new RespMessage();
		List<ImportedResult> importListRes = new ArrayList<ImportedResult>();
		ImportedResult importedResult = new ImportedResult();
		importedResult.setIsImported(0);
		importedResult.setCause("导入成功");

		Date d = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM");

		Gson gson = new Gson();
		SalesTask importExcelObj = gson.fromJson(importExcel, SalesTask.class);
		LOGGER.info(importExcelObj.getMonth() + "月的数据导入...");

		// 日志实体

		if (files != null) {
			BufferedOutputStream bw = null;
			try {
				String fileName = files.getOriginalFilename();
				String excelType = importExcelObj.getExcelType();

				// 判断是否有文件
				if (null != fileName && !"".equalsIgnoreCase(fileName.trim())
						&& (FilenameUtils.getExtension(fileName.trim()).equals("xls")
								|| FilenameUtils.getExtension(fileName.trim()).equals("xlsx"))) {
					// 可以选择把文件保存到服务器,创建输出文件对象
					String name = FilenameUtils.getName(fileName) + "_" + UUID.randomUUID().toString() + "."
							+ FilenameUtils.getExtension(fileName);
					// 得到文件上传的URL
					String fileUrl = importExcelProperty.getUploadPath() + name;
					String downloadUrl = importExcelProperty.getDomain() + "upload/" + name;
					File outFile = new File(fileUrl);
					// importLog.setUrl(downloadUrl);
					LOGGER.info("路径" + downloadUrl);

					// 文件到输出文件对象
					FileUtils.copyInputStreamToFile(files.getInputStream(), outFile);
					LOGGER.info("success");

					// 获得输入流
					InputStream input = null;
					input = files.getInputStream();

					List<Object> importList = null;
					try {
						// 读取基础数据
						LOGGER.info("读取基础数据..........");
						//读excel数据
						importList = ExcelUtils.getInstance().readExcel2Objs(input, SalesTask.class, 0, 0);
						if(importList != null && importList.size() > 0) {
							//批量将数据插入数据库
                            LOGGER.info("导入Excel数据,批量插入数据库...");
                            salesService.insertAllSalesTask(importList);
						}

					} catch (Exception e) {
						// TODO: handle exception
					}
				} else {
					importedResult.setCause("上传文件只支持.xls与.xlsx格式，请另存为兼容格式Excel再上传");
					LOGGER.warn("上传文件不为.xls或.xlsx格式");
					importedResult.setIsImported(2);
					importListRes.add(importedResult);
					rm.setData(importListRes);
					return rm;
				}
			} catch (Exception e) {
				LOGGER.warn("catch an exception in importTasks", e);
			}
		}
		return rm;
	}

}

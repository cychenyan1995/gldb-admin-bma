// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `HDao_gps.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package HDaoGps;

public class SnMapRecord implements java.lang.Cloneable, java.io.Serializable
{
    public int ddNo;

    public int devType;

    public int beginTime;

    public int endTime;

    public SnMapRecord()
    {
    }

    public SnMapRecord(int ddNo, int devType, int beginTime, int endTime)
    {
        this.ddNo = ddNo;
        this.devType = devType;
        this.beginTime = beginTime;
        this.endTime = endTime;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        SnMapRecord _r = null;
        if(rhs instanceof SnMapRecord)
        {
            _r = (SnMapRecord)rhs;
        }

        if(_r != null)
        {
            if(ddNo != _r.ddNo)
            {
                return false;
            }
            if(devType != _r.devType)
            {
                return false;
            }
            if(beginTime != _r.beginTime)
            {
                return false;
            }
            if(endTime != _r.endTime)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::HDaoGps::SnMapRecord");
        __h = IceInternal.HashUtil.hashAdd(__h, ddNo);
        __h = IceInternal.HashUtil.hashAdd(__h, devType);
        __h = IceInternal.HashUtil.hashAdd(__h, beginTime);
        __h = IceInternal.HashUtil.hashAdd(__h, endTime);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(ddNo);
        __os.writeInt(devType);
        __os.writeInt(beginTime);
        __os.writeInt(endTime);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        ddNo = __is.readInt();
        devType = __is.readInt();
        beginTime = __is.readInt();
        endTime = __is.readInt();
    }

    public static final long serialVersionUID = 1604657575L;
}
